{"version":3,"sources":["./src/app/note-editor/note-editor.component.ts","./src/app/note-editor/note-editor.component.html","./src/environments/environment.ts","./src/app/overview/overview.component.ts","./src/app/overview/overview.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/notes/notes.component.html","./src/app/notes/notes.component.ts","./src/app/app.module.ts","./src/app/kanban/kanban.component.ts","./src/app/kanban/kanban.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/notes.service.ts","./src/app/pomodoro/pomodoro.component.html","./src/app/pomodoro/pomodoro.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../notes.service';\nimport { Note, Status } from '../types';\n\n@Component({\n  selector: 'app-note-editor',\n  templateUrl: './note-editor.component.html',\n  styleUrls: ['./note-editor.component.css']\n})\nexport class NoteEditorComponent implements OnInit {\n\n  notes: Note[];\n  noteTitle = 'title';\n  noteDescription = 'description';\n  noteEstimatedPomodoros = 1;\n  noteStatus: Status = 'todo';\n\n  constructor(private notesService: NotesService) {\n    this.notes = notesService.getAll();\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"container\">\n        <h2>Note Editor</h2>\n\n        <app-notes></app-notes>\n\n        <div>\n            <p>Title: {{ noteTitle }}</p>\n            <p>Description:  {{ noteDescription }}</p>\n            <p>Estimated: {{ noteEstimatedPomodoros }}</p>\n            <p>Status: {{ noteStatus }}</p>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-notes></app-notes>\n<app-kanban></app-kanban>\n<app-pomodoro></app-pomodoro>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<app-nav></app-nav>\n<div class=\"content\">\n    <router-outlet></router-outlet>\n</div>\n<svg class=\"background-svg\"  width=\"100%\" height=\"auto\" preserveAspectRatio=\"none\" viewBox=\"0 0 1440 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M0 667.5s362-372 720-322.75S1440-51 1440-51v309c0 8.466-188.5 384.5-656 357.67C316.5 588.839 0 975.5 0 975.5v-308Z\"\n    fill=\"#FFABAB\" />\n  <path\n    d=\"M0 778.5s362-372 720-322.75S1440 60 1440 60v309c0 8.466-188.5 384.5-656 357.67C316.5 699.839 0 1086.5 0 1086.5v-308Z\"\n    fill=\"#FF8383\" />\n  <path\n    d=\"M0 717.5s362-372 720-322.75S1440-1 1440-1v309c0 8.466-188.5 384.5-656 357.67C316.5 638.839 0 1025.5 0 1025.5v-308Z\"\n    fill=\"#FF9E9E\" />\n</svg>\n","<div class=\"wrapper\">\n  <div class=\"container\">\n    <h2>Notes</h2>\n    <div class=\"form\">\n      <mat-form-field>\n        <input #titleField matInput type=\"text\" placeholder=\"Enter title here\">\n      </mat-form-field>\n      <mat-form-field>\n        <input #descField matInput type=\"text\" placeholder=\"Enter description here\">\n      </mat-form-field>\n      <mat-form-field>\n        <input #expectedField matInput type=\"number\" placeholder=\"Enter estimated pomodoros\" value=1>\n      </mat-form-field>\n      <mat-radio-group [(ngModel)]=\"selectedStatus\" required=\"true\">\n        <mat-radio-button *ngFor=\"let status of statuses\" [value]=\"status.value\" [checked]=\"true ? status.value === 'todo' : false\">{{status.displayName}}</mat-radio-button>\n      </mat-radio-group>\n      <button mat-raised-button color=\"accent\"\n        (click)=\"addToTodo(titleField.value, descField.value, expectedField.value, selectedStatus)\">Add to Todo</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../notes.service';\nimport { Status, StatusRadio } from '../types';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n  selectedStatus: Status;\n  statuses: StatusRadio[] = [\n    { value: 'todo', displayName: 'Todo' },\n    { value: 'in progress', displayName: 'In Progress'},\n    { value: 'done', displayName: 'Done'}\n  ];\n\n  constructor(private notesService: NotesService) { }\n\n  ngOnInit(): void {\n  }\n\n  addToTodo(title: string, description: string, estimated: number, status: Status): void {\n    this.notesService.addToTodo(title, description, estimated, status);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { AppComponent } from './app.component';\nimport { KanbanComponent } from './kanban/kanban.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { PomodoroComponent } from './pomodoro/pomodoro.component';\nimport { OverviewComponent } from './overview/overview.component';\nimport { NoteEditorComponent } from './note-editor/note-editor.component';\nimport { NavComponent } from './nav/nav.component';\n\nconst routes: Routes = [\n  { path: 'overview', component: OverviewComponent },\n  { path: 'notes', component: NotesComponent },\n  { path: 'kanban', component: KanbanComponent },\n  { path: 'pomodoro', component: PomodoroComponent },\n  { path: 'editor', component: NoteEditorComponent },\n  { path: '', redirectTo: 'overview', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    KanbanComponent,\n    NotesComponent,\n    PomodoroComponent,\n    OverviewComponent,\n    NoteEditorComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    DragDropModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    MatListModule,\n    MatRadioModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { NotesService } from '../notes.service';\nimport { Note } from '../types';\n\n@Component({\n  selector: 'app-kanban',\n  templateUrl: './kanban.component.html',\n  styleUrls: ['./kanban.component.css']\n})\nexport class KanbanComponent implements OnInit {\n  todo: Note[];\n  inProgress: Note[];\n  done: Note[];\n\n  constructor(private notesService: NotesService) {\n    this.todo = this.notesService.todo;\n    this.inProgress = this.notesService.inProgress;\n    this.done = this.notesService.done;\n  }\n\n  ngOnInit(): void {\n  }\n\n  drop(event: CdkDragDrop<string[]>): void {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex)\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    }\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"container\">\n    <h2>Kanban</h2>\n  </div>\n</div>\n\n<div class=\"wrapper\" cdkDropListGroup>\n  <div class=\"container\">\n    <h2>Todo</h2>\n\n    <div cdkDropList [cdkDropListData]=\"todo\" (cdkDropListDropped)=\"drop($event)\" class=\"list\">\n      <mat-card class=\"item\" *ngFor=\"let item of todo\" cdkDrag>\n        <mat-card-title>{{item.title}}</mat-card-title>\n        <mat-card-content>{{item.description}}  - {{item.status}}</mat-card-content>\n        <div *ngIf=\"item.estimated\">{{item.estimated}} pomodoros</div>\n      </mat-card>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <h2>In Progress</h2>\n\n    <div cdkDropList [cdkDropListData]=\"inProgress\" (cdkDropListDropped)=\"drop($event)\" class=\"list\">\n      <mat-card class=\"item\" *ngFor=\"let item of inProgress\" cdkDrag>\n        <mat-card-title>{{item.title}}</mat-card-title>\n        <mat-card-content>{{item.description}}</mat-card-content>\n        <div *ngIf=\"item.estimated\">{{item.estimated}} pomodoros</div>\n      </mat-card>\n    </div>\n  </div>\n\n  <div class=\"container\">\n    <h2>Done</h2>\n\n    <div cdkDropList [cdkDropListData]=\"done\" (cdkDropListDropped)=\"drop($event)\" class=\"list\">\n      <mat-card class=\"item\" *ngFor=\"let item of done\" cdkDrag>\n        <mat-card-title>{{item.title}}</mat-card-title>\n        <mat-card-content>{{item.description}}</mat-card-content>\n        <div *ngIf=\"item.estimated\">{{item.estimated}} pomodoros</div>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n  <div id=\"nav-links\">\n    <div class=\"left-align\">\n      <a routerLink=\"/overview\" routerLinkActive=\"active\">Overview</a>\n      <a routerLink=\"/notes\" routerLinkActive=\"active\">Notes</a>\n      <a routerLink=\"/kanban\" routerLinkActive=\"active\">Kanban</a>\n      <a routerLink=\"/pomodoro\" routerLinkActive=\"active\">Pomodoro</a>\n    </div>\n    <div class=\"right-align\">\n      <a routerLink=\"/editor\" routerLinkActive=\"active\">Editor</a>\n    </div>\n  </div>\n  <div class=\"hamburger\">\n    <span class=\"hamburger-link\"></span>\n    <span class=\"hamburger-link\"></span>\n    <span class=\"hamburger-link\"></span>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { Note, Status } from './types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotesService {\n\n  todo: Note[] = [];\n  inProgress: Note[] = [];\n  done: Note[] = [];\n\n  constructor() { }\n\n  addToTodo(title: string, description: string, estimated: number, status: Status): void {\n    if (title && description && estimated && status) {\n      if (!this.alreadyExists({ title, description, estimated, status })) {\n        this.todo.push({ title, description, estimated, status });\n      }\n    }\n  }\n\n  private alreadyExists(note: Note): boolean {\n    let matchFound = false;\n    this.getAll().some(innerNote => {\n      if (innerNote.description === note.description &&\n        innerNote.title === note.title &&\n        innerNote.estimated === note.estimated &&\n        innerNote.status === note.status) {\n        matchFound = true;\n        return matchFound;\n      }\n    });\n    return matchFound;\n  }\n\n  getAll(): Note[] {\n    return this.todo.concat(this.inProgress).concat(this.done);\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"container\">\n    <h2><a routerLink=\"/pomodoro\">Pomodoro</a></h2>\n\n    <h1>{{time}}</h1>\n    <button mat-raised-button color=\"accent\" (click)=\"startTimer(10)\">Start Timer</button>\n  </div>\n  <div class=\"container\">\n    <h2>Current Task</h2>\n    <h3>{{inProgress[0].title}}</h3>\n\n    <p>In Progress overview:</p>\n    <mat-list>\n      <mat-list-item *ngFor=\"let item of inProgress\"> - {{item.title}} </mat-list-item>\n    </mat-list>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NotesService } from '../notes.service';\nimport { Note } from '../types';\n\n@Component({\n  selector: 'app-pomodoro',\n  templateUrl: './pomodoro.component.html',\n  styleUrls: ['./pomodoro.component.css']\n})\nexport class PomodoroComponent implements OnInit {\n\n  time = '00:00';\n  timeData = new Date().getTime();\n  inProgress: Note[];\n\n  private timeToFinish: number;\n  private timeInterval: NodeJS.Timeout;\n\n  constructor(private notesService: NotesService) {\n    this.inProgress = notesService.inProgress;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  startTimer(minutes: number): void {\n    this.timeToFinish = new Date(new Date().getTime() + 1000 * 60 * minutes).getTime();\n    this.timeInterval = setInterval(() => this.tick(), 1000);\n  }\n\n  private tick(): void {\n    const now = new Date().getTime();\n    const timeLeft = this.timeToFinish - now;\n    const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);\n    if (timeLeft < 0) {\n      this.time = '00:00';\n      clearInterval(this.timeInterval);\n    } else {\n      this.time = `${minutes}:${seconds}`;\n    }\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}